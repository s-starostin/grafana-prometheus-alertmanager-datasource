{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","GenericDatasourceQueryCtrl","$scope","$injector","uiSegmentSrv","scope","target","type","annotations","expr","legendFormat","labelSelector","query","datasource","metricFindQuery","then","transformToSegments","rawQuery","panelCtrl","refresh","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,e,kBAAAA,S;;;;;;;;;;;;;;;;;;;;;4CAGKC,0B;;;AAEb,4CAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,YAA/B,EAA8C;AAAA;;AAAA,8JACtCF,MADsC,EAC9BC,SAD8B;;AAG5C,gBAAKE,KAAL,GAAaH,MAAb;AACA,gBAAKE,YAAL,GAAoBA,YAApB;AACA,gBAAKE,MAAL,CAAYA,MAAZ,GAAqB,MAAKA,MAAL,CAAYA,MAAZ,IAAsB,OAA3C;AACA,gBAAKA,MAAL,CAAYC,IAAZ,GAAmB,MAAKD,MAAL,CAAYC,IAAZ,IAAoB,WAAvC;AACA,gBAAKD,MAAL,CAAYE,WAAZ,GAA0B,MAAKF,MAAL,CAAYE,WAAZ,IAA2B,KAArD;AACA,gBAAKF,MAAL,CAAYG,IAAZ,GAAmB,MAAKH,MAAL,CAAYG,IAAZ,IAAoB,EAAvC;AACA,gBAAKH,MAAL,CAAYI,YAAZ,GAA2B,MAAKJ,MAAL,CAAYI,YAAZ,IAA4B,EAAvD;AACA,gBAAKJ,MAAL,CAAYK,aAAZ,GAA4B,MAAKL,MAAL,CAAYK,aAAZ,IAA6B,GAAzD;AAV4C;AAW7C;;;;qCAEUC,K,EAAO;AAChB;AACA,mBAAO,KAAKC,UAAL,CAAgBC,eAAhB,CAAgCF,SAAS,EAAzC,EACNG,IADM,CACD,KAAKX,YAAL,CAAkBY,mBAAlB,CAAsC,KAAtC,CADC,CAAP;AAED;;;6CAEkB;AACjB,iBAAKV,MAAL,CAAYW,QAAZ,GAAuB,CAAC,KAAKX,MAAL,CAAYW,QAApC;AACD;;;6CAEkB;AACjB,iBAAKC,SAAL,CAAeC,OAAf,GADiB,CACS;AACzB;;;;QA3B6CnB,S;;;;AA8BhDC,iCAA2BmB,WAA3B,GAAyC,4BAAzC","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\r\nimport './css/query-editor.css!'\r\n\r\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\r\n\r\nconstructor($scope, $injector, uiSegmentSrv)  {\r\n  super($scope, $injector);\r\n\r\n  this.scope = $scope;\r\n  this.uiSegmentSrv = uiSegmentSrv;\r\n  this.target.target = this.target.target || 'Query';\r\n  this.target.type = this.target.type || 'timeserie';\r\n  this.target.annotations = this.target.annotations || false;\r\n  this.target.expr = this.target.expr || '';\r\n  this.target.legendFormat = this.target.legendFormat || '';\r\n  this.target.labelSelector = this.target.labelSelector || '*';\r\n}\r\n\r\ngetOptions(query) {\r\n  // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\r\n  return this.datasource.metricFindQuery(query || '')\r\n  .then(this.uiSegmentSrv.transformToSegments(false));\r\n}\r\n\r\ntoggleEditorMode() {\r\n  this.target.rawQuery = !this.target.rawQuery;\r\n}\r\n\r\nonChangeInternal() {\r\n  this.panelCtrl.refresh(); // Asks the panel to refresh data.\r\n  }\r\n}\r\n\r\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\r\n"]}